
// PALETTE

var palette := GmfTool!Palette.all.first();

var toolGroupObjects = GmfTool!ToolGroup.all.selectOne(r|r.title = 'Objects');
var toolGroupConnections = GmfTool!ToolGroup.all.selectOne(r|r.title = 'Connections');

var toolEntry;

// ToolGroup: Agreement Context

var toolGroupAgContext = new GmfTool!ToolGroup;
toolGroupAgContext.title := 'Agreement Context';
toolGroupAgContext.collapsible := true;
palette.tools.add(toolGroupAgContext);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Actor');
toolGroupAgContext.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Context');
toolGroupAgContext.tools.add(toolEntry);


// ToolGroup: Agreement Terms

var toolGroupAgTerms = new GmfTool!ToolGroup;
toolGroupAgTerms.title := 'Agreement Terms';
toolGroupAgTerms.collapsible := true;
palette.tools.add(toolGroupAgTerms);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Agreement Term');
toolGroupAgTerms.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Service Configuration');
toolGroupAgTerms.tools.add(toolEntry);

var toolGroupGuaranteeTerms = new GmfTool!ToolGroup;
toolGroupGuaranteeTerms.title := 'Guarantee Terms';
toolGroupGuaranteeTerms.collapsible := true;
palette.tools.add(toolGroupGuaranteeTerms);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Guarantee Term');
toolGroupGuaranteeTerms.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'SLO');
toolGroupGuaranteeTerms.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Qualifying Condition');
toolGroupGuaranteeTerms.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Compensation');
toolGroupGuaranteeTerms.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Compensation Element');
toolGroupGuaranteeTerms.tools.add(toolEntry);

var toolGroupProperties = new GmfTool!ToolGroup;
toolGroupProperties.title := 'Properties';
toolGroupProperties.collapsible := true;
palette.tools.add(toolGroupProperties);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Configuration Property');
toolGroupProperties.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Monitorable Property');
toolGroupProperties.tools.add(toolEntry);

var toolGroupDomain = new GmfTool!ToolGroup;
toolGroupDomain.title := 'Domain';
toolGroupDomain.collapsible := true;
palette.tools.add(toolGroupDomain);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Enumerated');
toolGroupDomain.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Range');
toolGroupDomain.tools.add(toolEntry);

var toolGroupUtils = new GmfTool!ToolGroup;
toolGroupUtils.title := 'Utils';
toolGroupUtils.collapsible := true;
palette.tools.add(toolGroupUtils);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Metric');
toolGroupUtils.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Feature');
toolGroupUtils.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Value');
toolGroupUtils.tools.add(toolEntry);

toolEntry = toolGroupObjects.tools.selectOne(r|r.title = 'Parameter');
toolGroupUtils.tools.add(toolEntry);

delete toolGroupObjects;


// Compartments layout

for (figure in GmfGraph!Rectangle.all) {

	if(figure.name.contains('CompartmentFigure')) {
	
		-- Find the compartment figure
		var compartmentFigure = GmfGraph!Rectangle.all.selectOne(r|r.name = figure.name);
		
		-- ... and add a stack layout to it
		compartmentFigure.layout = new GmfGraph!StackLayout;
	
	}
	/* 
	else if(figure.name.contains('Figure')){
	
		-- Find the attribute figure
		var attributeFigure = GmfGraph!Rectangle.all.selectOne(r|r.name = figure.name);
		
		-- ... delete its border
		delete attributeFigure.border;
		
		-- ... set its outline to false
		attributeFigure.outline = false;
		
		-- ... and add a preferred size to it
		var preferredSize = new GmfGraph!Dimension;
		preferredSize.dx = 100;
		preferredSize.dy = 16;
		attributeFigure.preferredSize = preferredSize;
	}
	*/
}