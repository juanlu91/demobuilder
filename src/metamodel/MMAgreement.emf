@namespace(uri="http://agreement.metamodel/1.0", prefix="mmag")
package AgreementMetamodel;

class AgreementModel {
  attr String ~id;
  attr double version;
  val Context[1] context;
  val AgreementTerm[1] agTerm;
}

class Context {
  attr String templateId;
  attr double templateVersion;
  ref Metric metrics;
  ref Actor actors;
}

class Actor {
  attr String ~id;
  attr Role role = "PROVIDER";
  attr RoleType roleType = "RESPONDER";
}

enum Role {
  PROVIDER = 0;
  CONSUMER = 1;
}

enum RoleType {
  INITITATOR = 0;
  RESPONDER = 0;
}

enum Datatype {
  INTEGER = 0;
  FLOAT = 1;
  NATURAL = 2;
  NUMBER = 3;
  BOOLEAN = 4;
  SET = 5;
  ENUM = 6;
}

class Metric {
  attr Datatype type;
  attr String ~id;
  ref Domain domain;
}

abstract class Domain extends Range, Enumerated {
}

class Range {
  attr double min;
  attr double max;
}

class Enumerated {
  attr String values = "";
}

class AgreementTerm {
  ref ServiceConfiguration serviceConfigurarion;
  ref GuaranteeTerm guaranteeTerms;
  ref MonitorableProperty monitorableProperties;
}

class ServiceConfiguration {
  attr String endpointReference;
  attr String definitionReference;
  attr String monitorReference;
  attr String serviceName;
  ref Feature features;
  ref ConfigurationProperty configurationProperties;
}

class GuaranteeTerm {
  attr Role role;
  attr String ~id;
  ref SLO slo;
  ref QualifyingCondition qualifyingCondition;
  ref Compensation compensations;
}

class Feature {
  attr String ~id;
  ref Parameter parameters;
}

class Property {
  attr String expression;
  attr Scope scope;
  attr String definitionReference;
  attr String ~id;
  ref Feature features;
  ref Metric metric;
}

class ConfigurationProperty extends Property {
}

class MonitorableProperty extends Property {
  attr String monitorReference;
}

class SLO {
  attr String expression;
}

enum Scope {
  GLOBAL = 0;
  LOCAL = 1;
}

class Compensation {
  attr AssessmentInterval interval;
  attr CompensationType type;
  val CompensationElement compensationElements;
}

class QualifyingCondition {
  attr String expression;
}

class CompensationElement {
  attr String expression;
  attr String condition;
}

enum AssessmentInterval {
  YEARLY = 0;
  MONTHLY = 1;
  WEEKLY = 2;
  DAILY = 3;
  HOURLY = 4;
}

enum CompensationType {
  PENALTY = 0;
  REWARD = 1;
}

class Parameter {
}

