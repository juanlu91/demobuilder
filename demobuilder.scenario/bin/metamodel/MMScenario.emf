@namespace(uri="es.us.lsi.sma.demobuilder.scenario", prefix="es.us.lsi.sma.demobuilder.scenario")
package scenarioDiagram;

@gmf
@gmf.diagram
class Scenario {
  val ScenarioElement[*] scenarioElement;
}

@gmf.node(figure="svg", svg.uri="platform:/plugin/demobuilder.scenario/icons/Consumer.svg", label="name", tool.name="Consumer", tool.description="Creates a consumer", label.placement="external", label.icon="false", size="100,100", tool.small.bundle="demobuilder.scenario.edit", tool.small.path="/icons/full/obj16/Consumer.gif", tool.large.bundle="demobuilder.scenario.edit", tool.large.path="/icons/full/obj32/Consumer.gif")
class Consumer extends ScenarioElement, Actor {
}

enum Role {
  PROVIDER = 0;
  CONSUMER = 1;
}

enum AssessmentInterval {
  YEARLY = 0;
  MONTHLY = 1;
  WEEKLY = 2;
  DAILY = 3;
  HOURLY = 4;
}

enum CompensationType {
  PENALTY = 0;
  REWARD = 1;
}

@gmf.node(label.placement="none", label.icon="false", figure="svg", svg.uri="platform:/plugin/demobuilder.scenario/icons/GuaranteeTerm.svg", tool.name="Guarantee Term", tool.description="Creates a new guarantee term", tool.small.bundle="demobuilder.scenario.edit", tool.small.path="/icons/full/obj16/GuaranteeTerm.gif", tool.large.bundle="demobuilder.scenario.edit", tool.large.path="/icons/full/obj32/GuaranteeTerm.gif")
class GuaranteeTerm extends ScenarioElement {
  attr String expression;
  attr String condition;
  attr AssessmentInterval compensationInterval = "MONTHLY";
  attr CompensationType compensationType = "REWARD";
  attr String compensationExpression;
  attr String compensationCondition;
}

@gmf.node(figure="svg", svg.uri="platform:/plugin/demobuilder.scenario/icons/Provider.svg", label="name", tool.name="Provider", tool.description="Creates a provider", label.placement="external", label.icon="false", size="100,100", tool.small.bundle="demobuilder.scenario.edit", tool.small.path="/icons/full/obj16/Provider.gif", tool.large.bundle="demobuilder.scenario.edit", tool.large.path="/icons/full/obj32/Provider.gif")
class Provider extends ScenarioElement, Actor {
}

@gmf.node(figure="svg", svg.uri="platform:/plugin/demobuilder.scenario/icons/serviceNeed.svg", label="name", label.placement="external", label.icon="false", tool.name="Service Need", tool.description="Creates a service need", size="50,50", tool.small.bundle="demobuilder.scenario.edit", tool.small.path="/icons/full/obj16/ServiceNeed.gif", tool.large.bundle="demobuilder.scenario.edit", tool.large.path="/icons/full/obj32/ServiceNeed.gif")
class ServiceNeed extends ServiceElement, ScenarioElement {
  ref AgreementLink#source agreementLink;
}

@gmf.node(figure="svg", svg.uri="platform:/plugin/demobuilder.scenario/icons/serviceOffer.svg", label="name", label.placement="external", label.icon="false", tool.name="Service Offer", tool.description="Creates a service offer", size="50,50", tool.small.bundle="demobuilder.scenario.edit", tool.small.path="/icons/full/obj16/ServiceOffer.gif", tool.large.bundle="demobuilder.scenario.edit", tool.large.path="/icons/full/obj32/ServiceOffer.gif")
class ServiceOffer extends ServiceElement, ScenarioElement {

  @gmf.affixed
  val ServiceConfiguration serviceConfiguration;
  ref AgreementLink#target agreementLink;
}

@gmf.node(label.placement="none", label.icon="false", figure="svg", svg.uri="platform:/plugin/demobuilder.scenario/icons/serviceConfiguration.svg", tool.name="Service Configuration", tool.description="Creates a service configuration section", tool.small.bundle="demobuilder.scenario.edit", tool.small.path="/icons/full/obj16/ServiceConfiguration.gif", tool.large.bundle="demobuilder.scenario.edit", tool.large.path="/icons/full/obj32/ServiceConfiguration.gif")
class ServiceConfiguration extends ScenarioElement {
  attr String endpointReference;
  attr String definitionReference;
  attr String monitorReference;
  attr String serviceName;

  @gmf.affixed
  val GuaranteeTerm[*] guaranteTerms;
}

@gmf.link(source="source", target="target", label="name", width="1", style="dash", tool.name="Agreement Link", tool.description="Creates an agreement link", color="0,0,0")
class AgreementLink extends ScenarioElement {
  ref ServiceNeed#agreementLink source;
  ref ServiceOffer#agreementLink target;
}

@gmf.link(source="actor", target="serviceElement", label.placement="none", width="2", style="solid", tool.name="Service Link", tool.description="Creates a service link", color="0,0,0")
class ServiceLink extends ScenarioElement {
  ref Actor#serviceLinks actor;
  ref ServiceElement#serviceLinks serviceElement;
}

class ScenarioElement {
  attr String name;
}

class ServiceElement {
  ref ServiceLink[*]#serviceElement serviceLinks;
}

class Actor {
  ref ServiceLink[*]#actor serviceLinks;
}

